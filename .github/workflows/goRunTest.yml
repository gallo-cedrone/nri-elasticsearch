name: RunTest
on:
  push:
    branches:
  pull_request:
    branches:
      - master
jobs:
  BuildAndTestLinux:
    name: BuildLinux
    strategy:
      matrix:
        go: [ 1.13]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          path: go/src/github.com/gallo-cedrone/${{ github.event.repository.name }}
      - name: Installing go-cov
        run: go get github.com/jstemmer/go-junit-report github.com/axw/gocov/gocov/... github.com/AlekSi/gocov-xml
      - name: Build and test
        env:
          GOPATH: /home/runner/work/${{ github.event.repository.name }}/go
          GOBIN: /home/runner/work/${{ github.event.repository.name }}/go/bin
        run: |
          export PATH=$PATH:$GOBIN
          make clean validate test
  BuildAndTestWindows:
    name: BuildWindows
    strategy:
      matrix:
        go: [1.13]
    runs-on: windows-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Setting EnvVariable to checkout newLine char properly
      shell: bash
      run: |
        git config --system core.autocrlf false
        git config --system core.eol lf
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/gallo-cedrone/${{ github.event.repository.name }}
    - name: Build and test
      shell: bash
      run: |
        export GOPATH=/d/a/${{ github.event.repository.name }}/go
        go test ./src/
    - name: MSBuild
      shell: pwsh
      run: |
        $env:GOPATH = "d:\a\${{ github.event.repository.name }}\go"
        $env:GOBIN = "d:\a\${{ github.event.repository.name }}\go\bin"
        $env:path = "$env:path;$env:GOBIN"
        env
        go env
        go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
        .\win_build.ps1 -integration ${{ github.event.repository.name }} -installer -version 0.0.0 -arch amd64


                


