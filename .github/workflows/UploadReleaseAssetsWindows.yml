name: UploadReleaseAssetsWindows
on:
  release:
    types:
      - created
jobs:
  CreateAdnPushWindowsExecutable:
    name: CreateAdnPushWindowsExecutable
    strategy:
      matrix:
        go: [ 1.13]
        goarch: [ amd64 ]
    runs-on: windows-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Setting EnvVariable to checkout newLine char properly
      shell: bash
      run: |
        git config --system core.autocrlf false
        git config --system core.eol lf
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/gallo-cedrone/${{ github.event.repository.name }}
    - name: Install needed tools
      run: |
        choco install gnupg
        choco install -y windows-sdk-10.0 
    #- name: Setup MSBuild.exe
    #  uses: warrenbuckley/Setup-MSBuild@v1
    - name: Retrieve the certificate
      shell: bash
      env: 
        certificate_secret: ${{ secrets.certificate }}
      run: |
        printf "%s" "$certificate_secret" | base64 -d - > ./pkg/windows/nri-${{ matrix.goarch }}-installer/mycert.pfx
    - name: MSBuild
      shell: pwsh
      run: |
        $env:GOPATH = "d:\a\${{ github.event.repository.name }}\go"
        $env:GOBIN = "d:\a\${{ github.event.repository.name }}\go\bin"
        $env:path = "$env:path;"$env:GOBIN:`C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin`""
        go build ./...
        go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
        .\win_build.ps1 -integration ${{ github.event.repository.name }} -installer -version ${{ github.event.release.tag_name }} -arch ${{ matrix.goarch }} 
    - name: Upload Windows executable 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./target/bin/windows_${{ matrix.goarch }}/${{ github.event.repository.name }}.exe
        asset_name: ${{ github.event.repository.name }}.exe
        asset_content_type: Windows executable
    - name: Upload Windows Installer
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./pkg/windows/nri-${{ matrix.goarch }}-installer/bin/Release/${{ github.event.repository.name }}-${{ matrix.goarch }}.${{ github.event.release.tag_name }}.msi
        asset_name: ${{ github.event.repository.name }}-${{ matrix.goarch }}.${{ github.event.release.tag_name }}.msi
        asset_content_type: Windows Installer